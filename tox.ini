[tox]
minversion = 2.0
envlist = py27,py37,pep8
skipsdist = True

[testenv]
usedevelop = True
install_command = pip install {opts} {packages}
setenv = VIRTUAL_ENV={envdir}
         OS_STDOUT_CAPTURE=1
         OS_STDERR_CAPTURE=1
         OS_TEST_TIMEOUT=60
         OS_TEST_PATH=./brick_cinderclient_ext/tests/unit
passenv = *_proxy *_PROXY

deps =
    -c{env:UPPER_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/train}
    -r{toxinidir}/test-requirements.txt
    -r{toxinidir}/requirements.txt
commands =
           find . -type f -name "*.pyc" -delete
           stestr run {posargs}
whitelist_externals = find

[testenv:pep8]
basepython = python3
commands = flake8 {posargs}

[testenv:fast8]
basepython = python3
envdir = {toxworkdir}/pep8
commands = {toxinidir}/tools/fast8.sh

[testenv:venv]
basepython = python3
commands = {posargs}

[testenv:functional]
setenv =
  OS_TEST_PATH=./brick_cinderclient_ext/tests/functional
passenv = OS_*

[testenv:cover]
basepython = python3
setenv =
    {[testenv]setenv}
    PYTHON=coverage run --source brick_cinderclient_ext --parallel-mode
commands =
    stestr run {posargs}
    coverage combine
    coverage html -d cover
    coverage xml -o cover/coverage.xml

[testenv:docs]
basepython = python3
deps =
       -c{env:UPPER_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/train}
       -r{toxinidir}/requirements.txt
       -r{toxinidir}/doc/requirements.txt
commands = sphinx-build -b html doc/source doc/build/html

[testenv:releasenotes]
basepython = python3
deps =
       -c{env:UPPER_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/train}
       -r{toxinidir}/requirements.txt
       -r{toxinidir}/doc/requirements.txt
commands = sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html

[testenv:debug]
basepython = python3
commands = oslo_debug_helper -t brick_cinderclient_ext/tests/unit {posargs}

[testenv:bindep]
basepython = python3
# Do not install any requirements. We want this to be fast and work even if
# system dependencies are missing, since it's used to tell you what system
# dependencies are missing! This also means that bindep must be installed
# separately, outside of the requirements files, and develop mode disabled
# explicitly to avoid unnecessarily installing the checked-out repo too (this
# further relies on "tox.skipsdist = True" above).
deps = bindep
commands = bindep test
usedevelop = False

[flake8]
show-source = True
builtins = _
exclude=.venv,.git,.tox,dist,doc/*,*lib/python*,*egg,build

[testenv:lower-constraints]
basepython = python3
deps =
  -c{toxinidir}/lower-constraints.txt
  -r{toxinidir}/test-requirements.txt
  -r{toxinidir}/requirements.txt
